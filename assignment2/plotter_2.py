import numpy as np
import matplotlib.pyplot as plt

x = np.arange(1,36,1)
y = np.array([6.7118041e-02, 5.5239521e-02, 4.6630517e-02, 3.8672354e-02, 3.0508945e-02,
 2.2908030e-02, 1.5741294e-02, 1.0405900e-02, 6.8204333e-03, 4.1393102e-03,
 2.2402592e-03, 1.0622640e-03, 6.9088372e-04, 6.8097819e-05, 0.0000000e+00,
 9.2153461e-04, 2.3607421e-03, 4.4794693e-03, 7.9210848e-03, 1.2157279e-02,
 1.7979620e-02, 2.4928685e-02, 3.4064602e-02, 4.5512006e-02, 6.0288448e-02,
 7.8351758e-02, 1.0039778e-01, 1.3060881e-01, 1.7213249e-01, 2.3484252e-01,
 3.2670406e-01, 4.6466008e-01, 6.7907739e-01, 1.0000000e+00, 9.6322107e-01])

z = np.array([0.,         0.00146233, 0.01239823, 0.01845127, 0.02339469, 0.02896544,
 0.0354184,  0.04156191, 0.04719237, 0.05298927, 0.06062074, 0.07188714,
 0.07818697, 0.08650279, 0.09389973, 0.10240015, 0.11342173, 0.1230455,
 0.13399082, 0.14589098, 0.15914258, 0.1764399,  0.19586408, 0.21644963,
 0.2361112,  0.26280326, 0.2998195,  0.34355623, 0.39757767, 0.46682534,
 0.56571585, 0.6920398,  0.845739,   1.,         0.69559366])

plt.plot(x, y, label="RNN")
plt.plot(x, z, label="GRU")
plt.legend()
plt.xlabel("Time Step")
plt.ylabel("Normalized Average Norm of Gradient")
plt.title("Norm of Gradient of Final Time Step Loss \n With Respect to Hidden Layer at Each Timestep \n Averaged Across a Minibatch")
plt.savefig("figures/4_1.png")